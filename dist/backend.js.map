{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/CHeightAPI.ts","webpack:///./js/CHeightAPIShared.ts","webpack:///./js/HeightMapDataStore.ts","webpack:///./js/backend.ts","webpack:///external \"express\"","webpack:///external \"sqlite3\"","webpack:///external \"three\""],"names":[],"mappings":"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","file":"backend.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./js/backend.ts\");\n","import {Express, Request, Response, NextFunction} from \"express\";\r\nimport DataPoint, {HeightMapMetadata} from \"./CHeightAPIShared\";\r\nimport HeightMapDataStore from \"./HeightMapDataStore\";\r\n\r\n\r\nexport default class CHeightAPI {\r\n    public express: Express;\r\n\r\n    private readonly store = new HeightMapDataStore();\r\n    private metadata: HeightMapMetadata;\r\n\r\n    constructor() {\r\n        this.store.connect().then(() => {\r\n            console.log('connected');\r\n\r\n            return this.store.loadMetadata();\r\n        }).then((res) => {\r\n            console.log('metadata loaded');\r\n            this.metadata = res;\r\n        });\r\n    }\r\n\r\n    public handleRequest(req: Request, res: Response, next: NextFunction): void {\r\n        // only hanle jsonapi requests\r\n        if (req.header('Content-Type') !== \"application/vnd.api+json\") {\r\n            next();\r\n            return;\r\n        }\r\n\r\n        res.setHeader(\"Content-Type\", \"application/vnd.api+json\");\r\n        try {\r\n            let lat: number, long: number, resolution: number, batchSize: number;\r\n            [lat, long, resolution, batchSize] = this.parseRequestParameter(req);\r\n\r\n            let batchEdgeLength: number = Math.sqrt(batchSize);\r\n            if (batchEdgeLength % 1 !== 0) throw \"batch-size has to be a power of 2.\";\r\n\r\n            if (resolution === 0) { // pick resolution, that whole map fits in\r\n                let maxEdgeLength = Math.max(this.metadata.maxLat, this.metadata.maxLong);\r\n                let detailLevels: number = Math.ceil(CHeightAPI.getBaseLog(batchEdgeLength, maxEdgeLength)) - 1;\r\n                resolution = Math.pow(batchEdgeLength, detailLevels);\r\n            }\r\n\r\n            this.loadMapSubset(lat, long, resolution, batchEdgeLength).then((data: DataPoint[][]) => {\r\n                res.json({\r\n                    data: {\r\n                        type: 'height-data',\r\n                        id: `${resolution}-${batchSize}-${lat}-${long}`,\r\n                        attributes: {\r\n                            resolution: resolution,\r\n                            'batch-size': batchSize,\r\n                            matrix: data\r\n                        }\r\n                    },\r\n                    meta: {\r\n                        maxLat: this.metadata.maxLat,\r\n                        maxLong: this.metadata.maxLong,\r\n                        minLat: this.metadata.minLat,\r\n                        minLong: this.metadata.minLong\r\n                    }\r\n                });\r\n            });\r\n\r\n\r\n        } catch(err) {\r\n            if (typeof err === 'string') {\r\n                res.status(400);\r\n                res.json({\r\n                    errors: [{'title': err}]\r\n                });\r\n            } else {\r\n                res.status(500);\r\n                res.json({\r\n                    errors: [{\r\n                        title: err.toString(),\r\n                        meta: {\r\n                            message: err.message,\r\n                            stack: err.stack\r\n                        }\r\n                    }]\r\n                });\r\n                throw err;\r\n            }\r\n        }\r\n    }\r\n\r\n    // checks that every parameter is present\r\n    private parseRequestParameter(req: Request): [number, number, number, number] {\r\n        let req_params: string[] = Object.keys(req.query);\r\n\r\n        // check if params are present\r\n        if (!['lat', 'long', 'resolution', 'batch-size'].every(val => req_params.includes(val)))\r\n            throw \"Missing parameter. Provide 'lat', 'long', 'resolution and 'batch-size'.\";\r\n\r\n        let params_str: any[] = [req.query.lat, req.query.long, req.query.resolution, req.query['batch-size']];\r\n\r\n        // convert params to int\r\n        let params_int: number[] = params_str.map(val => {\r\n            let integer = parseInt(val);\r\n            if (isNaN(integer)) throw `All parameters have to be integers: ${val}`;\r\n            return integer;\r\n        });\r\n\r\n        return params_int as [number, number, number, number];\r\n    }\r\n\r\n    private async loadMapSubset(lat: number, long: number, resolution: number, batchEdgeLength: number): Promise<DataPoint[][]> {\r\n        let matrix: DataPoint[][] = [];\r\n        for (let y = 0, ilat = lat; y <= batchEdgeLength; y++, ilat += resolution) {\r\n            matrix[y] = [];\r\n            for (let x = 0, ilong = long; x <= batchEdgeLength; x++, ilong += resolution) {\r\n                matrix[y][x] = await this.getDataPoint(ilat, ilong);\r\n            }\r\n        }\r\n        return matrix;\r\n    }\r\n\r\n    private async getDataPoint(lat: number, long: number): Promise<DataPoint> {\r\n        let height: number = -1;\r\n        if (lat >= this.metadata.minLat && lat <= this.metadata.maxLat &&\r\n            long >= this.metadata.minLong && long <= this.metadata.maxLong)\r\n            height = await this.store.get(lat, long);\r\n        return new DataPoint(lat, long, height);\r\n    }\r\n\r\n    private static getBaseLog(base: number, val: number): number {\r\n        return Math.log(val) / Math.log(base);\r\n    }\r\n}","import {Vector3} from \"three\";\r\n\r\n\r\nexport class HeightMapMetadata {\r\n    minLat: number;\r\n    maxLat: number;\r\n    minLong: number;\r\n    maxLong: number;\r\n    minHeight: number;\r\n    maxHeight: number;\r\n}\r\n\r\nexport default class DataPoint {\r\n    lat: number;\r\n    long: number;\r\n    height: number;\r\n\r\n    constructor(lat: number, long: number, height: number) {\r\n        this.lat = lat;\r\n        this.long = long;\r\n        this.height = height;\r\n    }\r\n\r\n    public static load(obj: any): DataPoint {\r\n        return new DataPoint(obj.lat, obj.long, obj.height);\r\n    }\r\n\r\n    public equals(other: DataPoint) {\r\n        return (this.lat === other.lat &&\r\n            this.long === other.long &&\r\n            this.height === other.height);\r\n    }\r\n\r\n    public vector3(): Vector3 {\r\n        //TODO: move scale to backend\r\n        return new Vector3(this.long, this.height/50.0, this.lat);\r\n    }\r\n\r\n    public isInMap(): boolean {\r\n        return DataPoint.isInMap(this.height);\r\n    }\r\n\r\n    public static isInMap(height: number) {\r\n        return (height > 100);\r\n    }\r\n}","import {Database} from \"sqlite3\";\r\nimport DataPoint, {HeightMapMetadata} from \"./CHeightAPIShared\";\r\n\r\n\r\nexport default class HeightMapDataStore {\r\n    private readonly db_file: string = './heightdata.db';\r\n    private readonly db_data_table_name: string = 'heightdata';\r\n    private db: Database;\r\n\r\n    async connect() {\r\n        await new Promise((resolve, reject) => {\r\n            this.db = new Database(this.db_file, function(err) {\r\n                if (err)\r\n                    reject(err);\r\n                else\r\n                    resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    private checkConnected() {\r\n        if (!this.db) throw \"Database not connected.\";\r\n    }\r\n\r\n    async resetDB() {\r\n        this.checkConnected();\r\n\r\n        await new Promise((resolve, reject) => {\r\n            this.db.exec(`\r\n                DROP TABLE IF EXISTS ${this.db_data_table_name};\r\n                CREATE TABLE ${this.db_data_table_name} (\r\n                    lat INTEGER,\r\n                    long INTEGER,\r\n                    height INTEGER,\r\n                    PRIMARY KEY (lat, long)\r\n                );`,\r\n                (err) => {\r\n                    if (err)\r\n                        reject(err);\r\n                    else\r\n                        resolve();\r\n                })\r\n        });\r\n    }\r\n\r\n    async storeAll(rawPoints: number[][]) {\r\n        this.checkConnected();\r\n\r\n        if (rawPoints.length === 0) return;\r\n\r\n        let query: string = `INSERT INTO ${this.db_data_table_name} VALUES `;\r\n        let query_parts = [];\r\n        for (let i = 0; i < rawPoints.length; i++) {\r\n            query_parts[i] = `(${rawPoints[i][0]}, ${rawPoints[i][1]}, ${rawPoints[i][2]})`;\r\n        }\r\n        query += query_parts.join(', ') + ';';\r\n        await new Promise((resolve, reject) => {\r\n            this.db.run(query, (err) => {\r\n                if (err) reject(err);\r\n                else resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    async store(point: DataPoint) {\r\n        this.checkConnected();\r\n\r\n        await new Promise((resolve, reject) => {\r\n           this.db.run(`INSERT INTO ${this.db_data_table_name} VALUES ($lat, $long, $height);`, {\r\n               $lat: point.lat,\r\n               $long: point.long,\r\n               $height: point.height\r\n           }, (err) => {\r\n              if (err)\r\n                  reject(err);\r\n              else\r\n                  resolve();\r\n           });\r\n        });\r\n    }\r\n\r\n    async get(lat: number, long: number): Promise<number> {\r\n        return new Promise<number>((resolve, reject) => {\r\n            this.db.get(`SELECT height FROM ${this.db_data_table_name} WHERE lat = ${lat} AND long = ${long};`, (err, row) => {\r\n                if (err) reject(err);\r\n                else if (!row) resolve(-1);\r\n                else resolve(row.height);\r\n            });\r\n        });\r\n    }\r\n\r\n    private metadata: HeightMapMetadata;\r\n    async loadMetadata(): Promise<HeightMapMetadata> {\r\n        return new Promise<HeightMapMetadata>((resolve, reject) => {\r\n            if (this.metadata) {\r\n                resolve(this.metadata);\r\n                return;\r\n            }\r\n            this.db.get(`SELECT MIN(lat) as minLat,\r\n                                    MAX(lat) as maxLat,\r\n                                    MIN(long) as minLong,\r\n                                    MAX(long) as maxLong,\r\n                                    MIN(height) as minHeight,\r\n                                    MAX(height) as maxHeight\r\n                                    FROM ${this.db_data_table_name};`, (err, row) => {\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    this.metadata = row;\r\n                    resolve(this.metadata);\r\n                }\r\n            });\r\n        });\r\n    }\r\n}","import CHeightAPI from './CHeightAPI';\r\nimport * as express from 'express';\r\nimport {Express, Router} from \"express\";\r\n\r\nconst api = new CHeightAPI();\r\n\r\nconst port = process.env.PORT || 8080;\r\n\r\nconst app: Express = express();\r\nconst router: Router = express.Router();\r\nrouter.get('/', api.handleRequest.bind(api));\r\napp.use('/', router);\r\napp.use(express.static('.'));\r\n\r\napp.listen(port, (err: any) => {\r\n    if (err) {\r\n        return console.log(err);\r\n    }\r\n\r\n    return console.log(`server is listening on ${port}`);\r\n});","module.exports = require(\"express\");","module.exports = require(\"sqlite3\");","module.exports = require(\"three\");"],"sourceRoot":""}